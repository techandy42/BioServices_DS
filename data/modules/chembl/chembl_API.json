{
    "chembl": {
        "compounds2accession": {
            "Parameters": [
                {
                    "name": "compounds",
                    "type": "list[str]",
                    "default": null,
                    "optional": false,
                    "description": "List of ChEMBL compound IDs as strings."
                }
            ],
            "Returns": {
                "type": "defaultdict",
                "description": "Mapping of compound IDs to UniProt accession numbers."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.compounds2accession",
            "api_calling": "bioservices.ChEMBL.compounds2accession(compounds=$)",
            "example": "bioservices.ChEMBL.compounds2accession(compounds=['CHEMBL25', 'CHEMBL2'])",
            "description": "Identifies the target and corresponding UniProt accession number for a list of ChEMBL compounds."
        },
        "get_ATC": {
            "Parameters": [
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of records to retrieve. Default is 20."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The initial index from which to retrieve resources. Default is 0."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "The retrieved ATC classification entries, each represented as a dictionary."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_ATC",
            "api_calling": "bioservices.ChEMBL.get_ATC(limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_ATC(limit=5, offset=0, filters=None)",
            "description": "Retrieve the WHO ATC classification data for drugs in the ChEMBL database."
        },
        "get_activity": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for activity search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of entries to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of entries to skip before retrieving."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary of activity records matching the query and filters."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_activity",
            "api_calling": "bioservices.ChEMBL.get_activity(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.c.get_activity(filters=['pchembl_value__isnull=False', 'molecule_chembl_id=CHEMBL25'])",
            "description": "Activity values recorded in an Assay."
        },
        "get_approved_drugs": {
            "Parameters": [
                {
                    "name": "max_phase",
                    "type": "int",
                    "default": "4",
                    "optional": true,
                    "description": "Filter drugs at the specified maximum approval phase stage. Default is 4 for fully approved drugs."
                },
                {
                    "name": "maxdrugs",
                    "type": "int",
                    "default": "1000000",
                    "optional": true,
                    "description": "Specify the maximum number of drugs to retrieve. Default is 1000000."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "A list of dictionaries containing information about the approved drugs."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_approved_drugs",
            "api_calling": "bioservices.ChEMBL.get_approved_drugs(max_phase=$, maxdrugs=$)",
            "example": "bioservices.ChEMBL.get_approved_drugs(max_phase=4, maxdrugs=500)",
            "description": "Retrieve information on approved drugs from the ChEMBL database at specified phases."
        },
        "get_assay": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for assay search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of results to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The number of results to skip before starting to collect the result set."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing assay details matching the query parameters."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_assay",
            "api_calling": "bioservices.ChEMBL.get_assay(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_assay(query=\"CHEMBL1217643\", limit=20, offset=0, filters=None)",
            "description": "Retrieve details about assays as recorded in the ChEMBL database."
        },
        "get_binding_site": {
            "Parameters": [
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Maximum number of entries to retrieve, defaults to 20."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Starting point for the results to retrieve, defaults to 0."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "A list where each entry contains information about a target binding site."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_binding_site",
            "api_calling": "bioservices.ChEMBL.get_binding_site(limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_binding_site(limit=10, offset=0, filters=None)",
            "description": "Retrieve data on target binding site definitions."
        },
        "get_biotherapeutic": {
            "Parameters": [
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of records to retrieve, not exceeding a predefined maximum."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of records to skip from the start."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "A list of dictionaries containing biotherapeutic molecules along with their data."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_biotherapeutic",
            "api_calling": "bioservices.ChEMBL.get_biotherapeutic(limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_biotherapeutic(limit=10, offset=0, filters=None)",
            "description": "Retrieve information about biotherapeutic molecules, including HELM notation and related data."
        },
        "get_cell_line": {
            "Parameters": [
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of entries to retrieve. Maximum limit is 1000."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The number of entries to skip before starting retrieval."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "List of cell line information records matching query parameters."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_cell_line",
            "api_calling": "bioservices.ChEMBL.get_cell_line(limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_cell_line(limit=20, offset=0, filters=None)",
            "description": "Retrieve cell line information from the ChEMBL database."
        },
        "get_chembl_id_lookup": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for ChEMBL ID lookup."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Maximum number of entities to retrieve in a single request."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of entities to skip from the start."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing the information of ChEMBL ID entities."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_chembl_id_lookup",
            "api_calling": "bioservices.ChEMBL.get_chembl_id_lookup(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_chembl_id_lookup(query=\"CHEMBL123\", limit=20, offset=0, filters=None)",
            "description": "Retrieve information about ChEMBL IDs."
        },
        "get_compound_record": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for compound record search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of records to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Offset for the starting record."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing the compound record details."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_compound_record",
            "api_calling": "bioservices.ChEMBL.get_compound_record(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_compound_record(query=\"1874935\", limit=20, offset=0, filters=None)",
            "description": "Retrieve occurrence of a specified compound in a particular document."
        },
        "get_compound_structural_alert": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for compound structural alert search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Defines the maximum number of records to retrieve at once."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Specifies the number of records to skip before beginning to fetch data."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of structural alert dictionaries or single dictionary related to compounds that meet the query and filter criteria."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_compound_structural_alert",
            "api_calling": "bioservices.ChEMBL.get_compound_structural_alert(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_compound_structural_alert(query='CHEMBL123', limit=20, offset=0, filters=None)",
            "description": "Returns structural alerts in compounds based on the provided criteria."
        },
        "get_document": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for document search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Limit the number of returned records (default is 20)."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The starting point for records to fetch (default is 0)."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing metadata and documents extracted from the ChEMBL dataset."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_document",
            "api_calling": "bioservices.ChEMBL.get_document(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_document_term(query=\"CHEMBL1123498\", limit=20, offset=0, filters=None)",
            "description": "Retrieve details of documents/datasets from which assays have been extracted."
        },
        "get_document_similarity": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for document similarity search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of similar documents to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of documents to skip before starting to retrieve."
                },
                {
                    "name": "filters",
                    "type": "list",
                    "default": "None",
                    "optional": true,
                    "description": "List of conditions to apply to the search."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing similar documents and associated metadata."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_document_similarity",
            "api_calling": "bioservices.ChEMBL.get_document_similarity(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_document_similarity(limit=20, offset=0, filters=None)",
            "description": "Provides documents similar to a specified one."
        },
        "get_drug": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for drug search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Maximum number of results to be retrieved."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of results to skip from the start."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing drug-related information."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_drug",
            "api_calling": "bioservices.ChEMBL.get_drug(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_drug(query=\"CHEMBL25\", limit=10)",
            "description": "Retrieve information about approved drugs including applicants, patents, and research codes."
        },
        "get_drug_indication": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for drug indication search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of entries to retrieve for the query."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The number of entries to skip before starting to collect the result set."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing joined drug indication data."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_drug_indication",
            "api_calling": "bioservices.ChEMBL.get_drug_indication(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_drug_indication(limit=50, offset=100)",
            "description": "Retrieves drug indication information by combining data for drugs and diseases."
        },
        "get_go_slim": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for GO slim search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of records to return in one request."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The number of records to skip before starting to return records."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing the requested GO slim resources."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_go_slim",
            "api_calling": "bioservices.ChEMBL.get_go_slim(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_go_slim(limit=10, offset=0, filters=None)",
            "description": "Retrieve GO slim ontology data from the ChEMBL database."
        },
        "get_mechanism": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for mechanism search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Maximum number of results to return; use -1 for all available records."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of records to skip before starting to fetch results."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "List or dictionary of mechanism of action information records for FDA-approved drugs."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_mechanism",
            "api_calling": "bioservices.ChEMBL.get_mechanism(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_mechanism(limit=20, offset=0, filters=None)",
            "description": "Fetches mechanism of action information for FDA-approved drugs."
        },
        "get_metabolism": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for metabolism search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of entries to retrieve, with a default value of 20."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Offset for the entries retrieval, with a default value of 0."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing details about metabolic pathways, with references."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_metabolism",
            "api_calling": "bioservices.ChEMBL.get_metabolism(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_metabolism(query=None, limit=50, offset=10, filters=None)",
            "description": "Provides information about metabolic pathways with references."
        },
        "get_molecule": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for molecule search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of molecules to retrieve. Maximum is 1000."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of molecules to skip before retrieving results."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary with keys including 'page_meta' and 'molecules'."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_molecule",
            "api_calling": "bioservices.ChEMBL.get_molecule(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_molecule(query='CHEMBL25', limit=10, offset=0, filters=None)",
            "description": "Fetches molecular data from the ChEMBL database."
        },
        "get_molecule_form": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for molecule form search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Maximum number of entries to return."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of entries to skip before retrieving results."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing the relationships between molecule parents and salts."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_molecule_form",
            "api_calling": "bioservices.ChEMBL.get_molecule_form(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_molecule_form(query=\"CHEMBL2\", limit=20, offset=0, filters=None)",
            "description": "Relationships between molecule parents and salts."
        },
        "get_organism": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for organism search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The number of records to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The starting point for the retrieval."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing organism-related data retrieved from ChEMBL."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_organism",
            "api_calling": "bioservices.ChEMBL.get_organism(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_organism(limit=10, offset=0, filters=None)",
            "description": "Retrieve data about an organism from the ChEMBL database."
        },
        "get_similarity": {
            "Parameters": [
                {
                    "name": "structure",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Provide a valid existing substructure in SMILES format to look for in all molecules."
                },
                {
                    "name": "similarity",
                    "type": "int",
                    "default": "80",
                    "optional": true,
                    "description": "Must be an integer greater than 70 and less than 100."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Maximum number of molecules to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of molecules to skip before retrieval."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "A list of molecules matching the similarity search criteria."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_similarity",
            "api_calling": "bioservices.ChEMBL.get_similarity(structure=$, similarity=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_similarity(structure=\"CC(=O)Oc1ccccc1C(=O)O\", similarity=85, limit=10, offset=0, filters=None)",
            "description": "Conduct a similarity search for molecules in the ChEMBL database."
        },
        "get_source": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for source search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of records to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The number of records to skip in the retrieval process."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing the documents or dataset source information."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_source",
            "api_calling": "bioservices.ChEMBL.get_source(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_source(limit=10, offset=0, filters=None)",
            "description": "Retrieve information about document or dataset sources."
        },
        "get_status": {
            "Parameters": [],
            "Returns": {
                "type": "dict",
                "description": "A dictionary with information about database version and entry counts."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_status",
            "api_calling": "bioservices.ChEMBL.get_status()",
            "example": "bioservices.ChEMBL.get_status()",
            "description": "This method provides a version overview and entry counts of the database, including activities, compound records, distinct compounds, publications, targets, etc."
        },
        "get_status_resources": {
            "Parameters": [],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing the total counts of entries for each data resource in the ChEMBL database."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_status_resources",
            "api_calling": "bioservices.ChEMBL.get_status_resources()",
            "example": "bioservices.ChEMBL.get_status_resources()",
            "description": "Retrieves the number of entries for all available resources in the ChEMBL database."
        },
        "get_substructure": {
            "Parameters": [
                {
                    "name": "structure",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "A valid substructure in SMILE format or ChEMBL ID."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Maximum number of results to return."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of initial results to skip."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "A list of molecules corresponding to the substructure search."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_substructure",
            "api_calling": "bioservices.ChEMBL.get_substructure(structure=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_substructure(structure=\"CHEMBL25\", limit=20, offset=0, filters=None)",
            "description": "Perform a substructure search based on the provided chemical structure."
        },
        "get_target": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for target search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of results to retrieve. Use -1 to retrieve all."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The offset of the first result to retrieve for pagination."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary representing targets."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_target",
            "api_calling": "bioservices.ChEMBL.get_target(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_target(query='CHEMBL240', limit=20, offset=0, filters=None)",
            "description": "Retrieve targets, including proteins and non-proteins, as defined in assay definitions."
        },
        "get_target_component": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "int",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for target compound search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of entries to retrieve per request."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Starting offset for entry retrieval."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "List of dictionaries or dictionary containing detailed target component information."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_target_component",
            "api_calling": "bioservices.ChEMBL.get_target_component(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_target_component(query=1, limit=10, offset=0, filters=None)",
            "description": "Retrieve comprehensive information about specific target components, including their sequence details."
        },
        "get_target_relation": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "Query string or entity identifier for target relation search."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of items to retrieve in one call."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of items to skip before starting retrieval."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing details about target relations."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_target_relation",
            "api_calling": "bioservices.ChEMBL.get_target_relation(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_target_relation(query='CHEMBL261', limit=20, offset=0, filters=None)",
            "description": "Describes relations between targets."
        },
        "get_tissue": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "The identifier or query term associated with the tissue resource."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of results to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The starting index of the results to return."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "A list of dictionaries or dictionary containing the tissue classification entries."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_tissue",
            "api_calling": "bioservices.ChEMBL.get_tissue(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_tissue(limit=20, offset=0, filters=['pref_name__contains=cervix'])",
            "description": "Retrieves tissue classification information from the ChEMBL database."
        },
        "get_xref_source": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": "None",
                    "optional": true,
                    "description": "The query to search cross-references"
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of records to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The number of records to skip before starting to collect the result set."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict] (query=None) or dict (query=\"...\")",
                "description": "The search result matching the query parameters."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.get_xref_source",
            "api_calling": "bioservices.ChEMBL.get_xref_source(query=$, limit=$, offset=$, filters=$)",
            "example": "bioservices.ChEMBL.get_xref_source(limit=5, offset=0)",
            "description": "Retrieves cross-reference information from ChEMBL's database using specified query parameters."
        },
        "order_by": {
            "Parameters": [
                {
                    "name": "data",
                    "type": "list[dict]",
                    "default": null,
                    "optional": false,
                    "description": "A list of dictionaries representing data records to be sorted."
                },
                {
                    "name": "name",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The field name by which the data should be ordered. Includes nested field access using '__'."
                },
                {
                    "name": "filters",
                    "type": "list[str]",
                    "default": "None",
                    "optional": true,
                    "description": "List of filter criteria for narrowing the search results."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "The ordered list of data based on the provided field."
            },
            "api_type": "method",
            "api_name": "bioservices.chembl.order_by",
            "api_calling": "bioservices.chembl.order_by(data=$, name=$, ascending=$)",
            "example": "bioservices.chembl.order_by(data=data, name='molecule_chembl_id')",
            "description": "Sorts a given list of data dictionaries based on a specified field."
        },
        "search_activity": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Search query to filter the activities."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of records to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of records to skip."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing activity values recorded in assays, up to the limit and offset specified."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.search_activity",
            "api_calling": "bioservices.ChEMBL.search_activity(query=$, limit=$, offset=$)",
            "example": "bioservices.ChEMBL.search_activity(query=\"CHEMBL123\", limit=10, offset=5)",
            "description": "Retrieve activity values recorded in an assay."
        },
        "search_assay": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The string query to search for assays in the ChEMBL database."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of records to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The index of the first record to retrieve."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing assay details matching the search query."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.search_assay",
            "api_calling": "bioservices.ChEMBL.search_assay(query=$, limit=$, offset=$)",
            "example": "bioservices.ChEMBL.search_assay(query='CHEMBL1217643', limit=20, offset=0)",
            "description": "Search and retrieve assay details from the ChEMBL database."
        },
        "search_chembl_id_lookup": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The search query to look up ChEMBL IDs."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of results to return."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The starting point for the query results."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing the lookup results for the provided query."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.search_chembl_id_lookup",
            "api_calling": "bioservices.ChEMBL.search_chembl_id_lookup(query=$, limit=$, offset=$)",
            "example": "bioservices.ChEMBL.search_chembl_id_lookup(query=\"CHEMBL25\", limit=10, offset=0)",
            "description": "Look up ChEMBL ID entity type."
        },
        "search_document": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Query string to search for in documents."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of results to retrieve."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Start position of results to retrieve."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing the search results."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.search_document",
            "api_calling": "bioservices.ChEMBL.search_document(query=$, limit=$, offset=$)",
            "example": "bioservices.ChEMBL.search_document(query='cancer', limit=10, offset=0)",
            "description": "Perform a search for documents within the ChEMBL database."
        },
        "search_molecule": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The molecule identifier or criterion for searching, such as synonyms, SMILE strings, or InChI Key."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "The maximum number of results to return. Default is 20."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "The initial index from which search results are returned. Default is 0."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing search results and associated data or notes."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.search_molecule",
            "api_calling": "bioservices.ChEMBL.search_molecule(query=$, limit=$, offset=$)",
            "example": "bioservices.ChEMBL.search_molecule(query='aspirin', limit=20, offset=0)",
            "description": "Search for molecule data in the ChEMBL database using specific queries."
        },
        "search_target": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Query string to search for a target. Example: gene name or synonyms."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": "20",
                    "optional": true,
                    "description": "Number of results to retrieve. Must be greater than zero and less than or equal to 1000."
                },
                {
                    "name": "offset",
                    "type": "int",
                    "default": "0",
                    "optional": true,
                    "description": "Number of results to skip before returning data."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing the search results with detailed target data."
            },
            "api_type": "method",
            "api_name": "bioservices.ChEMBL.search_target",
            "api_calling": "bioservices.ChEMBL.search_target(query=$, limit=$, offset=$)",
            "example": "bioservices.ChEMBL.search_target(query=\"GABRB2\", limit=20, offset=0)",
            "description": "Search for targets (protein and non-protein) based on provided query."
        }
    }
}