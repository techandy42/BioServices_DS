{
    "cog": {
        "get_all_cogs_definition": {
            "Parameters": [
                {
                    "name": "page",
                    "type": "int",
                    "default": "None",
                    "optional": true,
                    "description": "Determines the page of the results to retrieve; if omitted, fetches all."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing all COG definitions or results from the specified page."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_all_cogs_definition",
            "api_calling": "bioservices.COG.get_all_cogs_definition(page=$)",
            "example": "bioservices.COG.get_all_cogs_definition(page=1)",
            "description": "Fetch all COG Definitions or definitions for a specified page."
        },
        "get_cog_definition_by_cog_id": {
            "Parameters": [
                {
                    "name": "cog_id",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The identifier of the desired COG."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing the definition details of the specified COG."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_cog_definition_by_cog_id",
            "api_calling": "bioservices.COG.get_cog_definition_by_cog_id(cog_id=$)",
            "example": "bioservices.COG.get_cog_definition_by_cog_id(cog_id=\"COG0003\")",
            "description": "Retrieve the definition of a specific COG by its identifier."
        },
        "get_cogs": {
            "Parameters": [
                {
                    "name": "kwargs",
                    "type": "dict",
                    "default": null,
                    "optional": true,
                    "description": "Additional parameters to refine the query."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing results, count, previous, and next page data from the COG API."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_cogs",
            "api_calling": "bioservices.COG.get_cogs(kwargs=$)",
            "example": "bioservices.COG.get_cogs(page=1)",
            "description": "Retrieve information about Clusters of Orthologous Groups (COGs)."
        },
        "get_cogs_by_category_id": {
            "Parameters": [
                {
                    "name": "category",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Taxonomic Category ID for filtering results."
                },
                {
                    "name": "page",
                    "type": "int",
                    "default": "None",
                    "optional": true,
                    "description": "Page number for paginated results; if None, retrieves all pages."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing filtered COG information based on the specified category ID."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_cogs_by_category_id",
            "api_calling": "bioservices.COG.get_cogs_by_category_id(category=$, page=$)",
            "example": "bioservices.COG.get_cogs_by_category_id(category='651137', page=1)",
            "description": "Filter COGs by taxonomic category ID."
        },
        "get_cogs_by_id": {
            "Parameters": [
                {
                    "name": "cog_id",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Specific COG ID tag to filter results, e.g., COG0003."
                },
                {
                    "name": "page",
                    "type": "int",
                    "default": "None",
                    "optional": true,
                    "description": "Number of the requested page for results, defaults to retrieving all pages."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing filtered COG entries based on provided COG ID and page."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_cogs_by_id",
            "api_calling": "bioservices.COG.get_cogs_by_id(cog_id=$, page=$)",
            "example": "bioservices.COG.get_cogs_by_id(cog_id=\"COG0003\", page=1)",
            "description": "Filter COGs by specific COG ID tag."
        },
        "get_cogs_by_id_and_organism": {
            "Parameters": [
                {
                    "name": "cog_id",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The COG ID to be queried. Example value: COG0004."
                },
                {
                    "name": "organism",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The organism's identifier (e.g., Escherichia_coli_K-12_sub_MG1655)."
                },
                {
                    "name": "page",
                    "type": "int",
                    "default": "None",
                    "optional": true,
                    "description": "The page number for paginated results. Default is None for querying all pages."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing filtered COGs corresponding to the input parameters."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_cogs_by_id_and_organism",
            "api_calling": "bioservices.COG.get_cogs_by_id_and_organism(cog_id=$, organism=$, page=$)",
            "example": "bioservices.COG.get_cogs_by_id_and_organism(cog_id='COG0004', organism='Escherichia_coli_K-12_sub_MG1655', page=1)",
            "description": "Filter COGs by their ID and associated organism."
        },
        "get_cogs_by_organism": {
            "Parameters": [
                {
                    "name": "name",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The exact organism name to filter the Clusters of Orthologous Groups."
                },
                {
                    "name": "page",
                    "type": "int",
                    "default": null,
                    "optional": true,
                    "description": "The specific page of results to return, where each page contains 10 entries."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing the filtered groups of orthologous genes for the specified organism."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_cogs_by_organism",
            "api_calling": "bioservices.COG.get_cogs_by_organism(name=$, page=$)",
            "example": "bioservices.COG.get_cogs_by_organism(name='Nitrosopumilus_maritimus_SCM1', page=1)",
            "description": "Fetches Clusters of Orthologous Groups (COGs) associated with a given organism name from the COG database."
        },
        "get_cogs_by_taxon_id": {
            "Parameters": [
                {
                    "name": "taxon_id",
                    "type": "int",
                    "default": null,
                    "optional": false,
                    "description": "The identifier of the taxonomy to filter by."
                },
                {
                    "name": "page",
                    "type": "int",
                    "default": "None",
                    "optional": true,
                    "description": "The page number of the results to retrieve, if applicable."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing filtered COG information based on the taxonomic ID."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_cogs_by_taxon_id",
            "api_calling": "bioservices.COG.get_cogs_by_taxon_id(taxon_id=$, page=$)",
            "example": "bioservices.COG.get_cogs_by_taxon_id(taxon_id=1229908, page=1)",
            "description": "Filter COGs by taxonomy ID, retrieving the relevant data."
        },
        "get_taxonomic_categories": {
            "Parameters": [
                {
                    "name": "page",
                    "type": "int",
                    "default": "None",
                    "optional": true,
                    "description": "The page number to return; if None, all pages are retrieved."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "Dictionary with all retrieved taxonomic categories."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_taxonomic_categories",
            "api_calling": "bioservices.COG.get_taxonomic_categories(page=$)",
            "example": "bioservices.COG.get_taxonomic_categories(page=None)",
            "description": "Retrieve all taxonomic categories, optionally limited to a specific page."
        },
        "get_taxonomic_category_by_name": {
            "Parameters": [
                {
                    "name": "name",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The name of the desired taxonomic category."
                },
                {
                    "name": "page",
                    "type": "int",
                    "default": "None",
                    "optional": true,
                    "description": "The specific page of the results to fetch; defaults to all pages."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "A dictionary containing the information about the specified taxonomic category."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.get_taxonomic_category_by_name",
            "api_calling": "bioservices.COG.get_taxonomic_category_by_name(name=$, page=$)",
            "example": "bioservices.COG.get_taxonomic_category_by_name(name=\"ALPHAPROTEOBACTERIA\", page=1)",
            "description": "Retrieves a specific taxonomic category by its name."
        },
        "search_organism": {
            "Parameters": [
                {
                    "name": "name",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "The organism name to search for possible matches."
                }
            ],
            "Returns": {
                "type": "list[dict]",
                "description": "A list where each item is a dictionary containing genome name, assembly identifier, and taxon identifier."
            },
            "api_type": "method",
            "api_name": "bioservices.COG.search_organism",
            "api_calling": "bioservices.COG.search_organism(name=$)",
            "example": "bioservices.COG.search_organism(name='coli')",
            "description": "Search for candidates matching the provided organism name."
        }
    }
}