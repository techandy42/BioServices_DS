{
    "uniprot": {
        "get_df": {
            "Parameters": [
                {
                    "name": "entries",
                    "type": "list",
                    "default": null,
                    "optional": false,
                    "description": "List of valid UniProt entry names or identifiers. If the list is very large (>200), split it into chunks."
                },
                {
                    "name": "nChunk",
                    "type": "int",
                    "default": 100,
                    "optional": true,
                    "description": "Size of chunks to query the entries."
                },
                {
                    "name": "organism",
                    "type": "str",
                    "default": null,
                    "optional": true,
                    "description": "Apply an organism filter via organism_id."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": 10,
                    "optional": true,
                    "description": "Limit number of entries per identifier; set to null to return all."
                },
                {
                    "name": "columns",
                    "type": "str",
                    "default": null,
                    "optional": true,
                    "description": "Comma-separated list of columns to include."
                },
                {
                    "name": "progress",
                    "type": "bool",
                    "default": false,
                    "optional": true,
                    "description": "Display progress bar during retrieval."
                }
            ],
            "Returns": {
                "type": "pandas.DataFrame",
                "description": "DataFrame indexed by UniProt ID containing the requested annotation columns."
            },
            "api_type": "method",
            "api_name": "bioservices.UniProt.get_df",
            "api_calling": "bioservices.UniProt.get_df(entries=$, nChunk=$, organism=$, limit=$, columns=$, progress=$)",
            "example": "bioservices.UniProt.get_df(entries=['P62988'], nChunk=50, organism=None, limit=10, columns='id,entry name', progress=True)",
            "description": "Given a list of UniProt entries, return a DataFrame with annotation for each entry."
        },
        "get_fasta": {
            "Parameters": [
                {
                    "name": "uniprot_id",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "A valid UniProt accession identifier (e.g., 'P12345')."
                }
            ],
            "Returns": {
                "type": "str",
                "description": "FASTA-formatted sequence string for the given UniProt ID."
            },
            "api_type": "method",
            "api_name": "bioservices.UniProt.get_fasta",
            "api_calling": "bioservices.UniProt.get_fasta(uniprot_id=$)",
            "example": "bioservices.UniProt.get_fasta(uniprot_id='P12345')",
            "description": "Alias to retrieve() with format 'fasta'. Returns the FASTA sequence for the given UniProt ID."
        },
        "mapping": {
            "Parameters": [
                {
                    "name": "fr",
                    "type": "str",
                    "default": "UniProtKB_AC-ID",
                    "optional": true,
                    "description": "Source database identifier; see valid_mapping."
                },
                {
                    "name": "to",
                    "type": "str",
                    "default": "KEGG",
                    "optional": true,
                    "description": "Target database identifier; see valid_mapping."
                },
                {
                    "name": "query",
                    "type": "str or list of str",
                    "default": "P13368",
                    "optional": true,
                    "description": "One or more source IDs to map (comma-separated string or list)."
                },
                {
                    "name": "polling_interval_seconds",
                    "type": "int",
                    "default": 3,
                    "optional": true,
                    "description": "Seconds between job status checks."
                },
                {
                    "name": "max_waiting_time",
                    "type": "int",
                    "default": 100,
                    "optional": true,
                    "description": "Maximum seconds to wait for the mapping job result."
                },
                {
                    "name": "progress",
                    "type": "bool",
                    "default": true,
                    "optional": true,
                    "description": "Display progress updates."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "Dictionary with 'results' (list of {'from','to'} mappings) and 'failedIds' (list of IDs not found)."
            },
            "api_type": "method",
            "api_name": "bioservices.UniProt.mapping",
            "api_calling": "bioservices.UniProt.mapping(fr=$, to=$, query=$, polling_interval_seconds=$, max_waiting_time=$, progress=$)",
            "example": "bioservices.UniProt.mapping(fr='UniProtKB_AC-ID', to='KEGG', query='P43403', polling_interval_seconds=3, max_waiting_time=100, progress=True)",
            "description": "Map identifiers between source and target databases via UniProt ID mapping service."
        },
        "quick_search": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Query string for UniProt database."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": 1,
                    "optional": true,
                    "description": "Number of results to return; default is 1."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "Dictionary of search results (headers and corresponding data)."
            },
            "api_type": "method",
            "api_name": "bioservices.UniProt.quick_search",
            "api_calling": "bioservices.UniProt.quick_search(query=$, limit=$)",
            "example": "bioservices.UniProt.quick_search(query='P43403', limit=1)",
            "description": "Specialised alias for search() returning a limited number of results."
        },
        "retrieve": {
            "Parameters": [
                {
                    "name": "uniprot_id",
                    "type": "str or list of str",
                    "default": null,
                    "optional": false,
                    "description": "UniProtKB, UniRef, UniParc, or Taxonomy ID(s)."
                },
                {
                    "name": "frmt",
                    "type": "str",
                    "default": "json",
                    "optional": true,
                    "description": "Output format: 'xml','txt','fasta','gff','rdf','json'."
                },
                {
                    "name": "database",
                    "type": "str",
                    "default": "uniprot",
                    "optional": true,
                    "description": "Database to query: 'uniprot','uniparc','uniref','taxonomy'."
                },
                {
                    "name": "include",
                    "type": "bool",
                    "default": false,
                    "optional": true,
                    "description": "Include additional RDF data when frmt='rdf'."
                }
            ],
            "Returns": {
                "type": "str, list, or dict",
                "description": "Retrieved data formatted as string, list, or dict depending on frmt."
            },
            "api_type": "method",
            "api_name": "bioservices.UniProt.retrieve",
            "api_calling": "bioservices.UniProt.retrieve(uniprot_id=$, frmt=$, database=$, include=$)",
            "example": "bioservices.UniProt.retrieve(uniprot_id='P09958', frmt='txt', database='uniprot', include=False)",
            "description": "Retrieve data for UniProt ID(s) in specified format."
        },
        "search": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Valid UniProt search query string."
                },
                {
                    "name": "frmt",
                    "type": "str",
                    "default": "tsv",
                    "optional": true,
                    "description": "Format: 'xlsx','fasta','gff','tsv','json'."
                },
                {
                    "name": "columns",
                    "type": "str",
                    "default": null,
                    "optional": true,
                    "description": "Comma-separated output columns; valid for 'tsv' or 'xlsx'."
                },
                {
                    "name": "include_isoforms",
                    "type": "bool",
                    "default": false,
                    "optional": true,
                    "description": "Include isoform sequences when frmt='fasta'."
                },
                {
                    "name": "sort",
                    "type": "str",
                    "default": "score",
                    "optional": true,
                    "description": "Sort criteria; set to null to disable."
                },
                {
                    "name": "compress",
                    "type": "bool",
                    "default": false,
                    "optional": true,
                    "description": "Compress output data."
                },
                {
                    "name": "limit",
                    "type": "int",
                    "default": null,
                    "optional": true,
                    "description": "Maximum number of entries to return."
                },
                {
                    "name": "size",
                    "type": "int",
                    "default": 25,
                    "optional": true,
                    "description": "Number of entries to fetch per page."
                },
                {
                    "name": "database",
                    "type": "str",
                    "default": "uniprotkb",
                    "optional": true,
                    "description": "Database to query: 'uniprotkb'."
                },
                {
                    "name": "progress",
                    "type": "bool",
                    "default": false,
                    "optional": true,
                    "description": "Show progress bar during retrieval."
                }
            ],
            "Returns": {
                "type": "str",
                "description": "Concatenated search results formatted per frmt parameter."
            },
            "api_type": "method",
            "api_name": "bioservices.UniProt.search",
            "api_calling": "bioservices.UniProt.search(query=$, frmt=$, columns=$, include_isoforms=$, sort=$, compress=$, limit=$, size=$, database=$, progress=$)",
            "example": "bioservices.UniProt.search(query='P12345+taxonomy_id:9606', frmt='json', limit=100)",
            "description": "Query the UniProt search service and return results in chosen format."
        },
        "uniref": {
            "Parameters": [
                {
                    "name": "query",
                    "type": "str",
                    "default": null,
                    "optional": false,
                    "description": "Query string for UniRef service (e.g., 'Q03063')."
                }
            ],
            "Returns": {
                "type": "dict",
                "description": "JSON-like dictionary response from the UniRef service."
            },
            "api_type": "method",
            "api_name": "bioservices.UniProt.uniref",
            "api_calling": "bioservices.UniProt.uniref(query=$)",
            "example": "bioservices.UniProt.uniref(query='Q03063')",
            "description": "Alias to retrieve() for the UniRef service; returns a JSON dictionary for the given query."
        },
        "valid_mapping": {
            "Parameters": [],
            "Returns": {
                "type": "dict",
                "description": "Dictionary of valid mapping identifiers supported by the UniProt service."
            },
            "api_type": "property",
            "api_name": "bioservices.UniProt.valid_mapping",
            "api_calling": "bioservices.UniProt.valid_mapping",
            "example": "",
            "description": "Property listing valid mapping identifiers supported by the UniProt service."
        }
    }
}